//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace SeedSpeak.Model
{
    public partial class Member
    {
        #region Primitive Properties
    
        public virtual System.Guid id
        {
            get;
            set;
        }
    
        public virtual string username
        {
            get;
            set;
        }
    
        public virtual string passwd
        {
            get;
            set;
        }
    
        public virtual string firstName
        {
            get;
            set;
        }
    
        public virtual string lastName
        {
            get;
            set;
        }
    
        public virtual string status
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> created
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> lastLogin
        {
            get;
            set;
        }
    
        public virtual Nullable<System.Guid> roleId
        {
            get { return _roleId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_roleId != value)
                    {
                        if (Role != null && Role.id != value)
                        {
                            Role = null;
                        }
                        _roleId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _roleId;
    
        public virtual string secretQ
        {
            get;
            set;
        }
    
        public virtual string secretA
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> isVerified
        {
            get;
            set;
        }
    
        public virtual string organisationName
        {
            get;
            set;
        }
    
        public virtual string Email
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<Bookmark> Bookmarks
        {
            get
            {
                if (_bookmarks == null)
                {
                    var newCollection = new FixupCollection<Bookmark>();
                    newCollection.CollectionChanged += FixupBookmarks;
                    _bookmarks = newCollection;
                }
                return _bookmarks;
            }
            set
            {
                if (!ReferenceEquals(_bookmarks, value))
                {
                    var previousValue = _bookmarks as FixupCollection<Bookmark>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupBookmarks;
                    }
                    _bookmarks = value;
                    var newValue = value as FixupCollection<Bookmark>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupBookmarks;
                    }
                }
            }
        }
        private ICollection<Bookmark> _bookmarks;
    
        public virtual ICollection<Category> Categories
        {
            get
            {
                if (_categories == null)
                {
                    var newCollection = new FixupCollection<Category>();
                    newCollection.CollectionChanged += FixupCategories;
                    _categories = newCollection;
                }
                return _categories;
            }
            set
            {
                if (!ReferenceEquals(_categories, value))
                {
                    var previousValue = _categories as FixupCollection<Category>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCategories;
                    }
                    _categories = value;
                    var newValue = value as FixupCollection<Category>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCategories;
                    }
                }
            }
        }
        private ICollection<Category> _categories;
    
        public virtual ICollection<Comment> Comments
        {
            get
            {
                if (_comments == null)
                {
                    var newCollection = new FixupCollection<Comment>();
                    newCollection.CollectionChanged += FixupComments;
                    _comments = newCollection;
                }
                return _comments;
            }
            set
            {
                if (!ReferenceEquals(_comments, value))
                {
                    var previousValue = _comments as FixupCollection<Comment>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupComments;
                    }
                    _comments = value;
                    var newValue = value as FixupCollection<Comment>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupComments;
                    }
                }
            }
        }
        private ICollection<Comment> _comments;
    
        public virtual ICollection<Commitment> Commitments
        {
            get
            {
                if (_commitments == null)
                {
                    var newCollection = new FixupCollection<Commitment>();
                    newCollection.CollectionChanged += FixupCommitments;
                    _commitments = newCollection;
                }
                return _commitments;
            }
            set
            {
                if (!ReferenceEquals(_commitments, value))
                {
                    var previousValue = _commitments as FixupCollection<Commitment>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCommitments;
                    }
                    _commitments = value;
                    var newValue = value as FixupCollection<Commitment>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCommitments;
                    }
                }
            }
        }
        private ICollection<Commitment> _commitments;
    
        public virtual ICollection<ExternalAccount> ExternalAccounts
        {
            get
            {
                if (_externalAccounts == null)
                {
                    var newCollection = new FixupCollection<ExternalAccount>();
                    newCollection.CollectionChanged += FixupExternalAccounts;
                    _externalAccounts = newCollection;
                }
                return _externalAccounts;
            }
            set
            {
                if (!ReferenceEquals(_externalAccounts, value))
                {
                    var previousValue = _externalAccounts as FixupCollection<ExternalAccount>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupExternalAccounts;
                    }
                    _externalAccounts = value;
                    var newValue = value as FixupCollection<ExternalAccount>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupExternalAccounts;
                    }
                }
            }
        }
        private ICollection<ExternalAccount> _externalAccounts;
    
        public virtual ICollection<Flag> Flags
        {
            get
            {
                if (_flags == null)
                {
                    var newCollection = new FixupCollection<Flag>();
                    newCollection.CollectionChanged += FixupFlags;
                    _flags = newCollection;
                }
                return _flags;
            }
            set
            {
                if (!ReferenceEquals(_flags, value))
                {
                    var previousValue = _flags as FixupCollection<Flag>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupFlags;
                    }
                    _flags = value;
                    var newValue = value as FixupCollection<Flag>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupFlags;
                    }
                }
            }
        }
        private ICollection<Flag> _flags;
    
        public virtual ICollection<Medium> Media
        {
            get
            {
                if (_media == null)
                {
                    var newCollection = new FixupCollection<Medium>();
                    newCollection.CollectionChanged += FixupMedia;
                    _media = newCollection;
                }
                return _media;
            }
            set
            {
                if (!ReferenceEquals(_media, value))
                {
                    var previousValue = _media as FixupCollection<Medium>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMedia;
                    }
                    _media = value;
                    var newValue = value as FixupCollection<Medium>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMedia;
                    }
                }
            }
        }
        private ICollection<Medium> _media;
    
        public virtual Role Role
        {
            get { return _role; }
            set
            {
                if (!ReferenceEquals(_role, value))
                {
                    var previousValue = _role;
                    _role = value;
                    FixupRole(previousValue);
                }
            }
        }
        private Role _role;
    
        public virtual ICollection<MemberProfile> MemberProfiles
        {
            get
            {
                if (_memberProfiles == null)
                {
                    var newCollection = new FixupCollection<MemberProfile>();
                    newCollection.CollectionChanged += FixupMemberProfiles;
                    _memberProfiles = newCollection;
                }
                return _memberProfiles;
            }
            set
            {
                if (!ReferenceEquals(_memberProfiles, value))
                {
                    var previousValue = _memberProfiles as FixupCollection<MemberProfile>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMemberProfiles;
                    }
                    _memberProfiles = value;
                    var newValue = value as FixupCollection<MemberProfile>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMemberProfiles;
                    }
                }
            }
        }
        private ICollection<MemberProfile> _memberProfiles;
    
        public virtual ICollection<MemberProfile> MemberProfiles1
        {
            get
            {
                if (_memberProfiles1 == null)
                {
                    var newCollection = new FixupCollection<MemberProfile>();
                    newCollection.CollectionChanged += FixupMemberProfiles1;
                    _memberProfiles1 = newCollection;
                }
                return _memberProfiles1;
            }
            set
            {
                if (!ReferenceEquals(_memberProfiles1, value))
                {
                    var previousValue = _memberProfiles1 as FixupCollection<MemberProfile>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMemberProfiles1;
                    }
                    _memberProfiles1 = value;
                    var newValue = value as FixupCollection<MemberProfile>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMemberProfiles1;
                    }
                }
            }
        }
        private ICollection<MemberProfile> _memberProfiles1;
    
        public virtual ICollection<Privacy> Privacies
        {
            get
            {
                if (_privacies == null)
                {
                    var newCollection = new FixupCollection<Privacy>();
                    newCollection.CollectionChanged += FixupPrivacies;
                    _privacies = newCollection;
                }
                return _privacies;
            }
            set
            {
                if (!ReferenceEquals(_privacies, value))
                {
                    var previousValue = _privacies as FixupCollection<Privacy>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPrivacies;
                    }
                    _privacies = value;
                    var newValue = value as FixupCollection<Privacy>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPrivacies;
                    }
                }
            }
        }
        private ICollection<Privacy> _privacies;
    
        public virtual ICollection<Rating> Ratings
        {
            get
            {
                if (_ratings == null)
                {
                    var newCollection = new FixupCollection<Rating>();
                    newCollection.CollectionChanged += FixupRatings;
                    _ratings = newCollection;
                }
                return _ratings;
            }
            set
            {
                if (!ReferenceEquals(_ratings, value))
                {
                    var previousValue = _ratings as FixupCollection<Rating>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupRatings;
                    }
                    _ratings = value;
                    var newValue = value as FixupCollection<Rating>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupRatings;
                    }
                }
            }
        }
        private ICollection<Rating> _ratings;
    
        public virtual ICollection<Seed> Seeds
        {
            get
            {
                if (_seeds == null)
                {
                    var newCollection = new FixupCollection<Seed>();
                    newCollection.CollectionChanged += FixupSeeds;
                    _seeds = newCollection;
                }
                return _seeds;
            }
            set
            {
                if (!ReferenceEquals(_seeds, value))
                {
                    var previousValue = _seeds as FixupCollection<Seed>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSeeds;
                    }
                    _seeds = value;
                    var newValue = value as FixupCollection<Seed>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSeeds;
                    }
                }
            }
        }
        private ICollection<Seed> _seeds;
    
        public virtual ICollection<MemberReplySeed> MemberReplySeeds
        {
            get
            {
                if (_memberReplySeeds == null)
                {
                    var newCollection = new FixupCollection<MemberReplySeed>();
                    newCollection.CollectionChanged += FixupMemberReplySeeds;
                    _memberReplySeeds = newCollection;
                }
                return _memberReplySeeds;
            }
            set
            {
                if (!ReferenceEquals(_memberReplySeeds, value))
                {
                    var previousValue = _memberReplySeeds as FixupCollection<MemberReplySeed>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMemberReplySeeds;
                    }
                    _memberReplySeeds = value;
                    var newValue = value as FixupCollection<MemberReplySeed>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMemberReplySeeds;
                    }
                }
            }
        }
        private ICollection<MemberReplySeed> _memberReplySeeds;
    
        public virtual ICollection<ssStream> ssStreams
        {
            get
            {
                if (_ssStreams == null)
                {
                    var newCollection = new FixupCollection<ssStream>();
                    newCollection.CollectionChanged += FixupssStreams;
                    _ssStreams = newCollection;
                }
                return _ssStreams;
            }
            set
            {
                if (!ReferenceEquals(_ssStreams, value))
                {
                    var previousValue = _ssStreams as FixupCollection<ssStream>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupssStreams;
                    }
                    _ssStreams = value;
                    var newValue = value as FixupCollection<ssStream>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupssStreams;
                    }
                }
            }
        }
        private ICollection<ssStream> _ssStreams;
    
        public virtual ICollection<FollowPeople> FollowPeoples
        {
            get
            {
                if (_followPeoples == null)
                {
                    var newCollection = new FixupCollection<FollowPeople>();
                    newCollection.CollectionChanged += FixupFollowPeoples;
                    _followPeoples = newCollection;
                }
                return _followPeoples;
            }
            set
            {
                if (!ReferenceEquals(_followPeoples, value))
                {
                    var previousValue = _followPeoples as FixupCollection<FollowPeople>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupFollowPeoples;
                    }
                    _followPeoples = value;
                    var newValue = value as FixupCollection<FollowPeople>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupFollowPeoples;
                    }
                }
            }
        }
        private ICollection<FollowPeople> _followPeoples;
    
        public virtual ICollection<FollowPeople> FollowPeoples1
        {
            get
            {
                if (_followPeoples1 == null)
                {
                    var newCollection = new FixupCollection<FollowPeople>();
                    newCollection.CollectionChanged += FixupFollowPeoples1;
                    _followPeoples1 = newCollection;
                }
                return _followPeoples1;
            }
            set
            {
                if (!ReferenceEquals(_followPeoples1, value))
                {
                    var previousValue = _followPeoples1 as FixupCollection<FollowPeople>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupFollowPeoples1;
                    }
                    _followPeoples1 = value;
                    var newValue = value as FixupCollection<FollowPeople>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupFollowPeoples1;
                    }
                }
            }
        }
        private ICollection<FollowPeople> _followPeoples1;
    
        public virtual ICollection<MutePeople> MutePeoples
        {
            get
            {
                if (_mutePeoples == null)
                {
                    var newCollection = new FixupCollection<MutePeople>();
                    newCollection.CollectionChanged += FixupMutePeoples;
                    _mutePeoples = newCollection;
                }
                return _mutePeoples;
            }
            set
            {
                if (!ReferenceEquals(_mutePeoples, value))
                {
                    var previousValue = _mutePeoples as FixupCollection<MutePeople>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMutePeoples;
                    }
                    _mutePeoples = value;
                    var newValue = value as FixupCollection<MutePeople>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMutePeoples;
                    }
                }
            }
        }
        private ICollection<MutePeople> _mutePeoples;
    
        public virtual ICollection<MutePeople> MutePeoples1
        {
            get
            {
                if (_mutePeoples1 == null)
                {
                    var newCollection = new FixupCollection<MutePeople>();
                    newCollection.CollectionChanged += FixupMutePeoples1;
                    _mutePeoples1 = newCollection;
                }
                return _mutePeoples1;
            }
            set
            {
                if (!ReferenceEquals(_mutePeoples1, value))
                {
                    var previousValue = _mutePeoples1 as FixupCollection<MutePeople>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMutePeoples1;
                    }
                    _mutePeoples1 = value;
                    var newValue = value as FixupCollection<MutePeople>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMutePeoples1;
                    }
                }
            }
        }
        private ICollection<MutePeople> _mutePeoples1;
    
        public virtual ICollection<HideUnhide> HideUnhides
        {
            get
            {
                if (_hideUnhides == null)
                {
                    var newCollection = new FixupCollection<HideUnhide>();
                    newCollection.CollectionChanged += FixupHideUnhides;
                    _hideUnhides = newCollection;
                }
                return _hideUnhides;
            }
            set
            {
                if (!ReferenceEquals(_hideUnhides, value))
                {
                    var previousValue = _hideUnhides as FixupCollection<HideUnhide>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupHideUnhides;
                    }
                    _hideUnhides = value;
                    var newValue = value as FixupCollection<HideUnhide>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupHideUnhides;
                    }
                }
            }
        }
        private ICollection<HideUnhide> _hideUnhides;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupRole(Role previousValue)
        {
            if (previousValue != null && previousValue.Members.Contains(this))
            {
                previousValue.Members.Remove(this);
            }
    
            if (Role != null)
            {
                if (!Role.Members.Contains(this))
                {
                    Role.Members.Add(this);
                }
                if (roleId != Role.id)
                {
                    roleId = Role.id;
                }
            }
            else if (!_settingFK)
            {
                roleId = null;
            }
        }
    
        private void FixupBookmarks(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Bookmark item in e.NewItems)
                {
                    item.Member = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Bookmark item in e.OldItems)
                {
                    if (ReferenceEquals(item.Member, this))
                    {
                        item.Member = null;
                    }
                }
            }
        }
    
        private void FixupCategories(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Category item in e.NewItems)
                {
                    item.Member = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Category item in e.OldItems)
                {
                    if (ReferenceEquals(item.Member, this))
                    {
                        item.Member = null;
                    }
                }
            }
        }
    
        private void FixupComments(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Comment item in e.NewItems)
                {
                    item.Member = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Comment item in e.OldItems)
                {
                    if (ReferenceEquals(item.Member, this))
                    {
                        item.Member = null;
                    }
                }
            }
        }
    
        private void FixupCommitments(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Commitment item in e.NewItems)
                {
                    item.Member = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Commitment item in e.OldItems)
                {
                    if (ReferenceEquals(item.Member, this))
                    {
                        item.Member = null;
                    }
                }
            }
        }
    
        private void FixupExternalAccounts(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ExternalAccount item in e.NewItems)
                {
                    item.Member = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ExternalAccount item in e.OldItems)
                {
                    if (ReferenceEquals(item.Member, this))
                    {
                        item.Member = null;
                    }
                }
            }
        }
    
        private void FixupFlags(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Flag item in e.NewItems)
                {
                    item.Member = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Flag item in e.OldItems)
                {
                    if (ReferenceEquals(item.Member, this))
                    {
                        item.Member = null;
                    }
                }
            }
        }
    
        private void FixupMedia(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Medium item in e.NewItems)
                {
                    item.Member = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Medium item in e.OldItems)
                {
                    if (ReferenceEquals(item.Member, this))
                    {
                        item.Member = null;
                    }
                }
            }
        }
    
        private void FixupMemberProfiles(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (MemberProfile item in e.NewItems)
                {
                    item.Member = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MemberProfile item in e.OldItems)
                {
                    if (ReferenceEquals(item.Member, this))
                    {
                        item.Member = null;
                    }
                }
            }
        }
    
        private void FixupMemberProfiles1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (MemberProfile item in e.NewItems)
                {
                    item.Member1 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MemberProfile item in e.OldItems)
                {
                    if (ReferenceEquals(item.Member1, this))
                    {
                        item.Member1 = null;
                    }
                }
            }
        }
    
        private void FixupPrivacies(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Privacy item in e.NewItems)
                {
                    item.Member = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Privacy item in e.OldItems)
                {
                    if (ReferenceEquals(item.Member, this))
                    {
                        item.Member = null;
                    }
                }
            }
        }
    
        private void FixupRatings(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Rating item in e.NewItems)
                {
                    item.Member = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Rating item in e.OldItems)
                {
                    if (ReferenceEquals(item.Member, this))
                    {
                        item.Member = null;
                    }
                }
            }
        }
    
        private void FixupSeeds(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Seed item in e.NewItems)
                {
                    item.Member = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Seed item in e.OldItems)
                {
                    if (ReferenceEquals(item.Member, this))
                    {
                        item.Member = null;
                    }
                }
            }
        }
    
        private void FixupMemberReplySeeds(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (MemberReplySeed item in e.NewItems)
                {
                    item.Member = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MemberReplySeed item in e.OldItems)
                {
                    if (ReferenceEquals(item.Member, this))
                    {
                        item.Member = null;
                    }
                }
            }
        }
    
        private void FixupssStreams(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ssStream item in e.NewItems)
                {
                    item.Member = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ssStream item in e.OldItems)
                {
                    if (ReferenceEquals(item.Member, this))
                    {
                        item.Member = null;
                    }
                }
            }
        }
    
        private void FixupFollowPeoples(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (FollowPeople item in e.NewItems)
                {
                    item.Member = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FollowPeople item in e.OldItems)
                {
                    if (ReferenceEquals(item.Member, this))
                    {
                        item.Member = null;
                    }
                }
            }
        }
    
        private void FixupFollowPeoples1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (FollowPeople item in e.NewItems)
                {
                    item.Member1 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FollowPeople item in e.OldItems)
                {
                    if (ReferenceEquals(item.Member1, this))
                    {
                        item.Member1 = null;
                    }
                }
            }
        }
    
        private void FixupMutePeoples(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (MutePeople item in e.NewItems)
                {
                    item.Member = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MutePeople item in e.OldItems)
                {
                    if (ReferenceEquals(item.Member, this))
                    {
                        item.Member = null;
                    }
                }
            }
        }
    
        private void FixupMutePeoples1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (MutePeople item in e.NewItems)
                {
                    item.Member1 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MutePeople item in e.OldItems)
                {
                    if (ReferenceEquals(item.Member1, this))
                    {
                        item.Member1 = null;
                    }
                }
            }
        }
    
        private void FixupHideUnhides(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (HideUnhide item in e.NewItems)
                {
                    item.Member = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (HideUnhide item in e.OldItems)
                {
                    if (ReferenceEquals(item.Member, this))
                    {
                        item.Member = null;
                    }
                }
            }
        }

        #endregion
    }
}
