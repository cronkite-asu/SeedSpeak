//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace SeedSpeak.Model
{
    public partial class FollowPeople
    {
        #region Primitive Properties
    
        public virtual System.Guid id
        {
            get;
            set;
        }
    
        public virtual Nullable<System.Guid> memberId
        {
            get { return _memberId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_memberId != value)
                    {
                        if (Member != null && Member.id != value)
                        {
                            Member = null;
                        }
                        _memberId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _memberId;
    
        public virtual Nullable<System.Guid> followingId
        {
            get { return _followingId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_followingId != value)
                    {
                        if (Member1 != null && Member1.id != value)
                        {
                            Member1 = null;
                        }
                        _followingId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _followingId;

        #endregion
        #region Navigation Properties
    
        public virtual Member Member
        {
            get { return _member; }
            set
            {
                if (!ReferenceEquals(_member, value))
                {
                    var previousValue = _member;
                    _member = value;
                    FixupMember(previousValue);
                }
            }
        }
        private Member _member;
    
        public virtual Member Member1
        {
            get { return _member1; }
            set
            {
                if (!ReferenceEquals(_member1, value))
                {
                    var previousValue = _member1;
                    _member1 = value;
                    FixupMember1(previousValue);
                }
            }
        }
        private Member _member1;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupMember(Member previousValue)
        {
            if (previousValue != null && previousValue.FollowPeoples.Contains(this))
            {
                previousValue.FollowPeoples.Remove(this);
            }
    
            if (Member != null)
            {
                if (!Member.FollowPeoples.Contains(this))
                {
                    Member.FollowPeoples.Add(this);
                }
                if (memberId != Member.id)
                {
                    memberId = Member.id;
                }
            }
            else if (!_settingFK)
            {
                memberId = null;
            }
        }
    
        private void FixupMember1(Member previousValue)
        {
            if (previousValue != null && previousValue.FollowPeoples1.Contains(this))
            {
                previousValue.FollowPeoples1.Remove(this);
            }
    
            if (Member1 != null)
            {
                if (!Member1.FollowPeoples1.Contains(this))
                {
                    Member1.FollowPeoples1.Add(this);
                }
                if (followingId != Member1.id)
                {
                    followingId = Member1.id;
                }
            }
            else if (!_settingFK)
            {
                followingId = null;
            }
        }

        #endregion
    }
}
