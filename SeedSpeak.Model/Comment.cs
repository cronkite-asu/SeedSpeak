//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace SeedSpeak.Model
{
    public partial class Comment
    {
        #region Primitive Properties
    
        public virtual System.Guid id
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> commentDate
        {
            get;
            set;
        }
    
        public virtual string msg
        {
            get;
            set;
        }
    
        public virtual Nullable<System.Guid> seedId
        {
            get { return _seedId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_seedId != value)
                    {
                        if (Seed != null && Seed.id != value)
                        {
                            Seed = null;
                        }
                        _seedId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _seedId;
    
        public virtual Nullable<System.Guid> commentById
        {
            get { return _commentById; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_commentById != value)
                    {
                        if (Member != null && Member.id != value)
                        {
                            Member = null;
                        }
                        _commentById = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _commentById;
    
        public virtual Nullable<bool> isRead
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Member Member
        {
            get { return _member; }
            set
            {
                if (!ReferenceEquals(_member, value))
                {
                    var previousValue = _member;
                    _member = value;
                    FixupMember(previousValue);
                }
            }
        }
        private Member _member;
    
        public virtual Seed Seed
        {
            get { return _seed; }
            set
            {
                if (!ReferenceEquals(_seed, value))
                {
                    var previousValue = _seed;
                    _seed = value;
                    FixupSeed(previousValue);
                }
            }
        }
        private Seed _seed;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupMember(Member previousValue)
        {
            if (previousValue != null && previousValue.Comments.Contains(this))
            {
                previousValue.Comments.Remove(this);
            }
    
            if (Member != null)
            {
                if (!Member.Comments.Contains(this))
                {
                    Member.Comments.Add(this);
                }
                if (commentById != Member.id)
                {
                    commentById = Member.id;
                }
            }
            else if (!_settingFK)
            {
                commentById = null;
            }
        }
    
        private void FixupSeed(Seed previousValue)
        {
            if (previousValue != null && previousValue.Comments.Contains(this))
            {
                previousValue.Comments.Remove(this);
            }
    
            if (Seed != null)
            {
                if (!Seed.Comments.Contains(this))
                {
                    Seed.Comments.Add(this);
                }
                if (seedId != Seed.id)
                {
                    seedId = Seed.id;
                }
            }
            else if (!_settingFK)
            {
                seedId = null;
            }
        }

        #endregion
    }
}
